---

- fail:
    msg: "Offline deployment only supports CentOS 7 system now."
  when: ansible_os_family != "RedHat"

- name: Preflight check - Set unzip status
  shell: rpm -qa | grep -w unzip | wc -l
  register: unzip_st
  changed_when: false

- name: Copy jdk rpm from local
  copy:
    src: "{{ downloads_dir }}/{{ jdk_rpm_file }}"
    dest: "/tmp/{{ jdk_rpm_file }}"

- name: Copy unzip rpm from local
  copy:
    src: "{{ downloads_dir }}/{{ unzip_rpm_file }}"
    dest: "/tmp/{{ unzip_rpm_file }}"
  when: unzip_st.stdout|int != 1

- name: Ensure jdk rpm is installed
  yum:
    name: "/tmp/{{ jdk_rpm_file }}"
    state: present
  when: ansible_os_family == "RedHat"
  become: true

- name: Ensure unzip rpm is installed
  yum:
    name: "/tmp/{{ unzip_rpm_file }}"
    state: present
  when: ansible_os_family == "RedHat" and unzip_st.stdout|int != 1
  become: true

- name: link "/usr/java/default"
  file:
    dest: "/usr/java/default"
    src: "/usr/java/{{ jdk_version }}"
    state: link
  become: true

- name: alternatives link for "java"
  alternatives:
    name: java
    link: /usr/bin/java
    path: "/usr/java/{{ jdk_version }}/jre/bin/java"
  become: true

- name: alternatives link for "javac"
  alternatives:
    name: javac
    link: /usr/bin/javac
    path: "/usr/java/{{ jdk_version }}/bin/javac"
  become: true

- name: alternatives link for "jar"
  alternatives:
    name: jar
    link: /usr/bin/jar
    path: "/usr/java/{{ jdk_version }}/bin/jar"
  become: true

- name: check if "java_sdk" target exists
  stat: path=/usr/lib/jvm/java
  register: filecheck
  become: true

- name: alternatives link for "java_sdk"
  alternatives:
    name: java_sdk
    link: /usr/lib/jvm/java
    path: "/usr/java/default"
  when: filecheck and filecheck.stat.exists
  become: true

- name: Remove temporary downloaded files
  file: path={{ item }} state=absent
  with_items:
    - "/tmp/{{ jdk_rpm_file }}"
    - "/tmp/{{ unzip_rpm_file }}"
  ignore_errors: true
